name: Build and Run
on:
  push:
    branches: 
      - master
    paths:
      - 'myapp/src/**'

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.version.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set new version
        id: version
        working-directory: ./myapp
        run: |
          # Get version from pom.xml
          CURRENT_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
          echo "Current version: $CURRENT_VERSION"
          # Increment patch version in pom.xml
          mvn build-helper:parse-version versions:set \
            -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} \
            versions:commit
          
          NEW_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
          echo "New version: $NEW_VERSION"
          echo image_tag=$NEW_VERSION >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./myapp/
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/myapp:${{ steps.version.outputs.image_tag }}

  run:
    name: Run
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Run Docker container
        run: |
          docker run -d --name myapp ${{ vars.DOCKERHUB_USERNAME }}/myapp:${{ needs.build.outputs.image_tag }}
          sleep 3 # Give some time for the app to run
          docker logs myapp
